(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("deck"));
	else if(typeof define === 'function' && define.amd)
		define(["deck"], factory);
	else if(typeof exports === 'object')
		exports["deck"] = factory(require("deck"));
	else
		root["deck"] = factory(root["deck"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE__deck_gl_core__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./bundle.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./bundle.js":
/*!*******************!*\
  !*** ./bundle.js ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

const CartoUtils = __webpack_require__(/*! ./src */ "./src/index.js");

/* global window, global */
const _global = typeof window === 'undefined' ? global : window;
const deck = _global.deck || {};

// Check if peer dependencies are included
if (!deck.LineLayer) {
  throw new Error('@deck.gl/layers is not found');
}

module.exports = Object.assign(deck, {carto: CartoUtils});


/***/ }),

/***/ "./src/api/maps-api-client.js":
/*!************************************!*\
  !*** ./src/api/maps-api-client.js ***!
  \************************************/
/*! exports provided: getTileJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTileJSON", function() { return getTileJSON; });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ "./src/config.js");


const DEFAULT_USER_COMPONENT_IN_URL = '{user}';
const DEFAULT_REGION_COMPONENT_IN_URL = '{region}';

/**
 * Obtain a TileJson from Maps API v1 and v2
 */
async function getTileJSON(mapConfig, credentials) {
  const creds = {...Object(_config__WEBPACK_IMPORTED_MODULE_0__["getDefaultCredentials"])(), ...credentials};
  switch (Object(_config__WEBPACK_IMPORTED_MODULE_0__["getMapsVersion"])(creds)) {
    case 'v1':
      // Maps API v1
      const layergroup = await instantiateMap({mapConfig, credentials: creds});
      return layergroup.metadata.tilejson.vector;

    case 'v2':
      // Maps API v2
      return await instantiateMap({mapConfig, credentials: creds});

    default:
      throw new Error('Invalid maps API version. It shoud be v1 or v2');
  }
}

/**
 * Instantiate a map using Maps API
 */
async function instantiateMap({mapConfig, credentials}) {
  const url = buildURL({mapConfig, credentials});

  let response;

  try {
    /* global fetch */
    /* eslint no-undef: "error" */
    response = await fetch(url, {
      headers: {
        Accept: 'application/json'
      }
    });
  } catch (error) {
    throw new Error(`Failed to connect to Maps API: ${error}`);
  }

  const json = await response.json();

  if (!response.ok) {
    dealWithError({response, json, credentials});
  }

  return json;
}

/**
 * Display proper message from Maps API error
 */
function dealWithError({response, json, credentials}) {
  switch (response.status) {
    case 401:
      throw new Error(
        `Unauthorized access to Maps API: invalid combination of user ('${
          credentials.username
        }') and apiKey ('${credentials.apiKey}')`
      );
    case 403:
      throw new Error(
        `Unauthorized access to dataset: the provided apiKey('${
          credentials.apiKey
        }') doesn't provide access to the requested data`
      );

    default:
      const e = Object(_config__WEBPACK_IMPORTED_MODULE_0__["getMapsVersion"])() === 'v1' ? JSON.stringify(json.errors) : json.error;
      throw new Error(e);
  }
}

/**
 * Build a URL with all required parameters
 */
function buildURL({mapConfig, credentials}) {
  const cfg = JSON.stringify(mapConfig);
  const encodedApiKey = encodeParameter('api_key', credentials.apiKey);
  const encodedClient = encodeParameter('client', `deck-gl-carto`);
  const parameters = [encodedApiKey, encodedClient];
  return `${mapsUrl(credentials)}/tilejson?${parameters.join('&')}&${encodeParameter(
    'config',
    cfg
  )}`;
}

/**
 * Prepare a url valid for the specified user
 */
function mapsUrl(credentials) {
  return credentials.mapsUrl
    .replace(DEFAULT_USER_COMPONENT_IN_URL, credentials.username)
    .replace(DEFAULT_REGION_COMPONENT_IN_URL, credentials.region);
}

/**
 * Simple encode parameter
 */
function encodeParameter(name, value) {
  return `${name}=${encodeURIComponent(value)}`;
}


/***/ }),

/***/ "./src/basemap.js":
/*!************************!*\
  !*** ./src/basemap.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const base_url = 'https://basemaps.cartocdn.com/gl/{basemap}-gl-style/style.json';

/* harmony default export */ __webpack_exports__["default"] = ({
  VOYAGER: base_url.replace('{basemap}', 'voyager'),
  POSITRON: base_url.replace('{basemap}', 'positron'),
  DARK_MATTER: base_url.replace('{basemap}', 'dark-matter'),
  VOYAGER_NOLABELS: base_url.replace('{basemap}', 'voyager-nolabels'),
  POSITRON_NOLABELS: base_url.replace('{basemap}', 'positron-nolabels'),
  DARK_MATTER_NOLABELS: base_url.replace('{basemap}', 'dark-matter-nolabels')
});


/***/ }),

/***/ "./src/config.js":
/*!***********************!*\
  !*** ./src/config.js ***!
  \***********************/
/*! exports provided: setDefaultCredentials, getDefaultCredentials, getMapsVersion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDefaultCredentials", function() { return setDefaultCredentials; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultCredentials", function() { return getDefaultCredentials; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMapsVersion", function() { return getMapsVersion; });
const defaultCredentials = {
  username: 'public',
  apiKey: 'default_public',
  region: 'us',
  // Set to null to guess from mapsUrl attribute. Other values are 'v1' or 'v2'
  mapsVersion: null,
  // SQL API URL
  sqlUrl: 'https://{user}.carto.com/api/v2/sql',
  // Maps API URL
  mapsUrl: 'https://maps-api-v2.{region}.carto.com/user/{user}'
};

let credentials = defaultCredentials;

function setDefaultCredentials(opts) {
  credentials = {
    ...credentials,
    ...opts
  };
}

function getDefaultCredentials() {
  return credentials;
}

function getMapsVersion(creds) {
  const localCreds = creds || credentials;
  if (localCreds.mapsVersion) {
    return localCreds.mapsVersion;
  }

  return localCreds.mapsUrl.includes('api/v1/map') ? 'v1' : 'v2';
}


/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: getDefaultCredentials, setDefaultCredentials, CartoSQLLayer, CartoBQTilerLayer, BASEMAP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ "./src/config.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDefaultCredentials", function() { return _config_js__WEBPACK_IMPORTED_MODULE_0__["getDefaultCredentials"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDefaultCredentials", function() { return _config_js__WEBPACK_IMPORTED_MODULE_0__["setDefaultCredentials"]; });

/* harmony import */ var _layers_carto_sql_layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layers/carto-sql-layer */ "./src/layers/carto-sql-layer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CartoSQLLayer", function() { return _layers_carto_sql_layer__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _layers_carto_bqtiler_layer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layers/carto-bqtiler-layer */ "./src/layers/carto-bqtiler-layer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CartoBQTilerLayer", function() { return _layers_carto_bqtiler_layer__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _basemap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basemap */ "./src/basemap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BASEMAP", function() { return _basemap__WEBPACK_IMPORTED_MODULE_3__["default"]; });







/***/ }),

/***/ "./src/layers/carto-bqtiler-layer.js":
/*!*******************************************!*\
  !*** ./src/layers/carto-bqtiler-layer.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CartoBQTilerLayer; });
/* harmony import */ var _carto_layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carto-layer */ "./src/layers/carto-layer.js");


class CartoBQTilerLayer extends _carto_layer__WEBPACK_IMPORTED_MODULE_0__["default"] {
  buildMapConfig() {
    return {
      version: '2.0.0',
      layers: [
        {
          type: 'tileset',
          source: 'bigquery',
          options: {
            tileset: this.props.data
          }
        }
      ]
    };
  }
}

CartoBQTilerLayer.layerName = 'CartoBQTilerLayer';


/***/ }),

/***/ "./src/layers/carto-layer.js":
/*!***********************************!*\
  !*** ./src/layers/carto-layer.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CartoLayer; });
/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ "@deck.gl/core");
/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deck_gl_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _api_maps_api_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../api/maps-api-client */ "./src/api/maps-api-client.js");




const defaultProps = {
  data: null,
  credentials: null,
  onDataLoad: {type: 'function', value: tilejson => {}, compare: false},
  // eslint-disable-next-line
  onDataError: {type: 'function', value: err => console.error(err), compare: false}
};

class CartoLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__["CompositeLayer"] {
  initializeState() {
    this.state = {
      tilejson: null
    };
  }

  updateState({changeFlags}) {
    const {data} = this.props;
    if (changeFlags.dataChanged && data) {
      this._updateData();
    }
  }

  async _updateData() {
    try {
      const tilejson = await this._updateTileJSON();
      this.setState({tilejson});
      this.props.onDataLoad(tilejson);
    } catch (err) {
      this.props.onDataError(err);
    }
  }

  buildMapConfig() {
    throw new Error('You must use one of the specific carto layers: BQ or SQL type');
  }

  async _updateTileJSON() {
    const tilejson = await Object(_api_maps_api_client__WEBPACK_IMPORTED_MODULE_1__["getTileJSON"])(this.buildMapConfig(this.props), this.props.credentials);
    return tilejson;
  }

  onHover(info, pickingEvent) {
    const [mvtLayer] = this.getSubLayers();
    return mvtLayer ? mvtLayer.onHover(info, pickingEvent) : super.onHover(info, pickingEvent);
  }

  renderLayers() {
    if (!this.state.tilejson) return null;

    const {updateTriggers} = this.props;

    return new _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__["MVTLayer"](
      this.props,
      this.getSubLayerProps({
        id: 'mvt',
        data: this.state.tilejson,
        updateTriggers
      })
    );
  }
}

CartoLayer.layerName = 'CartoLayer';
CartoLayer.defaultProps = defaultProps;


/***/ }),

/***/ "./src/layers/carto-sql-layer.js":
/*!***************************************!*\
  !*** ./src/layers/carto-sql-layer.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CartoSQLLayer; });
/* harmony import */ var _carto_layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carto-layer */ "./src/layers/carto-layer.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ "./src/config.js");



const defaultProps = {
  bufferSize: 16, // MVT buffersize in pixels,
  tileExtent: 4096, // Tile extent in tile coordinate space (MVT spec.)
  uniqueIdProperty: 'cartodb_id'
};

class CartoSQLLayer extends _carto_layer__WEBPACK_IMPORTED_MODULE_0__["default"] {
  buildMapConfig() {
    const {data, bufferSize, tileExtent} = this.props;

    const version = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getMapsVersion"])(this.props.creds);
    const isSQL = data.search(' ') > -1;
    const sql = isSQL ? data : `SELECT * FROM ${data}`;

    switch (version) {
      case 'v1':
        // Map config v1
        return {
          version: '1.3.1',
          buffersize: {
            mvt: bufferSize
          },
          layers: [
            {
              type: 'mapnik',
              options: {
                sql: sql.trim(),
                vector_extent: tileExtent
              }
            }
          ]
        };

      case 'v2':
        // Map config v2
        return {
          version: '2.0.0',
          buffer_size: bufferSize,
          tile_extent: tileExtent,
          layers: [
            {
              type: 'sql',
              source: 'postgres',
              options: {
                sql: sql.trim(),
                vector_extent: tileExtent
              }
            }
          ]
        };
      default:
        throw new Error(`Cannot build MapConfig for unmatching version ${version}`);
    }
  }
}

CartoSQLLayer.layerName = 'CartoSQLLayer';
CartoSQLLayer.defaultProps = defaultProps;


/***/ }),

/***/ "@deck.gl/core":
/*!***********************!*\
  !*** external "deck" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__deck_gl_core__;

/***/ })

/******/ });
});