{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["Matrix4","MVTLoader","load","COORDINATE_SYSTEM","TileLayer","getURLFromTemplate","isURLTemplate","ClipExtension","WORLD_SIZE","defaultProps","uniqueIdProperty","type","value","highlightedFeatureId","onViewportChange","optional","compare","fetchTileJSON","url","error","Error","MVTLayer","initializeState","setState","data","tileJSON","isLoaded","state","tileset","updateState","props","oldProps","context","changeFlags","dataChanged","_updateTileData","viewportChanged","_onViewportChange","onDataLoad","minZoom","maxZoom","tilejson","tiles","Number","isFinite","minzoom","maxzoom","renderLayers","getTileData","tile","Promise","reject","options","getLoadOptions","mvt","coordinates","viewport","resolution","tileIndex","x","y","z","renderSubLayers","worldScale","Math","pow","xScale","yScale","xOffset","yOffset","modelMatrix","scale","autoHighlight","coordinateOrigin","coordinateSystem","CARTESIAN","extensions","onHover","info","pickingEvent","hoveredFeatureId","hoveredFeature","object","newHoveredFeatureId","getFeatureUniqueId","getHighlightedObjectIndex","isFeatureIdPresent","isFeatureIdDefined","Array","isArray","featureIdToHighlight","findIndex","feature","_pickObjects","maxObjects","deck","width","height","layerIds","id","pickObjects","getRenderedFeatures","maxFeatures","features","featureCache","Set","renderedFeatures","f","featureId","push","has","add","bind","_onViewportLoad","properties","undefined","layerName"],"mappings":"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","sourcesContent":["import {Matrix4} from 'math.gl';\nimport {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate, isURLTemplate} from '../tile-layer/utils';\nimport ClipExtension from './clip-extension';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps = {\n  uniqueIdProperty: {type: 'string', value: ''},\n  highlightedFeatureId: null,\n  onViewportChange: {type: 'function', optional: true, value: null, compare: false}\n};\n\nasync function fetchTileJSON(url) {\n  try {\n    return await load(url);\n  } catch (error) {\n    throw new Error(`An error occurred fetching TileJSON: ${error}`);\n  }\n}\n\nexport default class MVTLayer extends TileLayer {\n  initializeState() {\n    super.initializeState();\n    this.setState({\n      data: null,\n      tileJSON: null\n    });\n  }\n\n  get isLoaded() {\n    return this.state.data && this.state.tileset && super.isLoaded;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    if (changeFlags.dataChanged) {\n      this._updateTileData({props});\n    }\n\n    if (this.state.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      const {tileset} = this.state;\n      if (changeFlags.viewportChanged && tileset.isLoaded) {\n        this._onViewportChange();\n      }\n    }\n  }\n\n  async _updateTileData({props}) {\n    const {onDataLoad} = this.props;\n    let {data} = props;\n    let tileJSON = null;\n    let {minZoom, maxZoom} = props;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      this.setState({data: null, tileJSON: null});\n      tileJSON = await fetchTileJSON(data);\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON);\n      }\n    } else if (data.tilejson) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n\n      if (Number.isFinite(tileJSON.minzoom) && tileJSON.minzoom > minZoom) {\n        minZoom = tileJSON.minzoom;\n      }\n\n      if (\n        Number.isFinite(tileJSON.maxzoom) &&\n        (!Number.isFinite(maxZoom) || tileJSON.maxzoom < maxZoom)\n      ) {\n        maxZoom = tileJSON.maxzoom;\n      }\n    }\n\n    this.setState({data, tileJSON, minZoom, maxZoom});\n  }\n\n  renderLayers() {\n    if (!this.state.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.state.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let options = this.getLoadOptions();\n    options = {\n      ...options,\n      mvt: {\n        ...(options && options.mvt),\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: {x: tile.x, y: tile.y, z: tile.z}\n      }\n    };\n    return load(url, MVTLoader, options);\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    return super.renderSubLayers(props);\n  }\n\n  onHover(info, pickingEvent) {\n    const {uniqueIdProperty, autoHighlight} = this.props;\n\n    if (autoHighlight) {\n      const {hoveredFeatureId} = this.state;\n      const hoveredFeature = info.object;\n      let newHoveredFeatureId;\n\n      if (hoveredFeature) {\n        newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      }\n\n      if (hoveredFeatureId !== newHoveredFeatureId) {\n        this.setState({hoveredFeatureId: newHoveredFeatureId});\n      }\n    }\n\n    return super.onHover(info, pickingEvent);\n  }\n\n  getHighlightedObjectIndex(tile) {\n    const {hoveredFeatureId} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId} = this.props;\n    const {data} = tile;\n\n    const isFeatureIdPresent =\n      isFeatureIdDefined(hoveredFeatureId) || isFeatureIdDefined(highlightedFeatureId);\n\n    if (!isFeatureIdPresent || !Array.isArray(data)) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isFeatureIdDefined(highlightedFeatureId)\n      ? highlightedFeatureId\n      : hoveredFeatureId;\n\n    return data.findIndex(\n      feature => getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight\n    );\n  }\n\n  _pickObjects(maxObjects) {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  getRenderedFeatures(maxFeatures = null) {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === -1) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  _onViewportChange() {\n    const {onViewportChange} = this.props;\n    if (onViewportChange) {\n      const {viewport} = this.context;\n      onViewportChange({\n        getRenderedFeatures: this.getRenderedFeatures.bind(this),\n        viewport\n      });\n    }\n  }\n\n  _onViewportLoad() {\n    super._onViewportLoad();\n    this._onViewportChange();\n  }\n}\n\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n  if (uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return -1;\n}\n\nfunction isFeatureIdDefined(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\nMVTLayer.layerName = 'MVTLayer';\nMVTLayer.defaultProps = defaultProps;\n"],"file":"mvt-layer.js"}